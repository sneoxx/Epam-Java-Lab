<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.0</version>
    </parent>


    <groupId>com.zaraev.epam</groupId>
    <artifactId>java-courses</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>Java-Zaraev-api</module>
        <module>Java-Zaraev-db</module>
        <module>Java-Zaraev-impl</module>
        <module>spam</module>
    </modules>
    <name>Java Zaraev</name>

    <properties>
        <jacoco-maven-plugin.haltOnFailure>true</jacoco-maven-plugin.haltOnFailure>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>


        <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
        <lombok.version>1.18.10</lombok.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <junit-jupiter-engine.version>5.4.0</junit-jupiter-engine.version>
        <mockito-all.version>1.8.4</mockito-all.version>

        <postgresql.version>42.2.19</postgresql.version>
        <liquibase-core.version>4.3.5</liquibase-core.version>
        <liquibase-maven-plugin.version>4.3.5</liquibase-maven-plugin.version>
<!--        <hibernate-core.version>5.4.31.Final</hibernate-core.version>-->
<!--        <hibernate-entitymanager.version>5.4.31.Final</hibernate-entitymanager.version>-->
<!--        <tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>-->
<!--        <gson.version>2.8.6</gson.version>-->
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-site-plugin.version>3.3</maven-site-plugin.version>
<!--        <spring-core.version>5.2.6.RELEASE</spring-core.version>-->
<!--        <spring-context.version>5.2.6.RELEASE</spring-context.version>-->
<!--        <spring-data-jpa.version>2.2.7.RELEASE</spring-data-jpa.version>-->
<!--        <jackson-databind.version>2.9.2</jackson-databind.version>-->
        <validation-api.version>2.0.0.Final</validation-api.version>
        <h2.version>1.4.200</h2.version>
<!--        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>-->
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin.version}</version>
                <configuration>
                    <outputEncoding>UTF-8</outputEncoding>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
                <configuration>
                    <excludes>
                        <exclude>**/*.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <!-- attached to Maven test phase -->
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/jacoco-report</outputDirectory>
                        </configuration>
                    </execution>
                    <!-- Add checking -->
                    <execution>
                        <id>jacoco-check</id>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <haltOnFailure>${jacoco-maven-plugin.haltOnFailure}</haltOnFailure>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.7</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>


    <profiles>
        <profile>
            <id>off-test-coverage</id>
            <properties>
                <jacoco-maven-plugin.haltOnFailure>false</jacoco-maven-plugin.haltOnFailure>
            </properties>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- логгирование-->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback-classic.version}</version>
            </dependency>
            <!-- tests-->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter-engine.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito-all.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- postgresql-->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <!-- add liquibase-->
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase-core.version}</version>
            </dependency>
            <!-- add hibernate-->
<!--            <dependency>-->
<!--                <groupId>org.hibernate</groupId>-->
<!--                <artifactId>hibernate-core</artifactId>-->
<!--                <version>${hibernate-core.version}</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>org.hibernate</groupId>-->
<!--                <artifactId>hibernate-entitymanager</artifactId>-->
<!--                <version>${hibernate-entitymanager.version}</version>-->
<!--            </dependency>-->

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>2.5.0</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>2.5.0</version>
            </dependency>

<!--            &lt;!&ndash; Spring Core&ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>org.springframework</groupId>-->
<!--                <artifactId>spring-core</artifactId>-->
<!--                <version>${spring-core.version}</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>org.springframework</groupId>-->
<!--                <artifactId>spring-context</artifactId>-->
<!--                <version>${spring-context.version}</version>-->
<!--            </dependency>-->
<!--            &lt;!&ndash; Spring Data&ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>org.springframework.data</groupId>-->
<!--                <artifactId>spring-data-jpa</artifactId>-->
<!--                <version>${spring-data-jpa.version}</version>-->
<!--            </dependency>-->
<!--            &lt;!&ndash; Spring Web MVC основные для спринг web&ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>org.springframework</groupId>-->
<!--                <artifactId>spring-webmvc</artifactId>-->
<!--                <version>${spring-core.version}</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>javax.servlet</groupId>-->
<!--                <artifactId>javax.servlet-api</artifactId>-->
<!--                <version>${javax.servlet-api.version}</version>-->
<!--                <scope>provided</scope>-->
<!--            </dependency>-->
<!--            &lt;!&ndash; Для маппинга в JSON для преобразования из обьектов в json и обратно&ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>com.fasterxml.jackson.core</groupId>-->
<!--                <artifactId>jackson-databind</artifactId>-->
<!--                <version>${jackson-databind.version}</version>-->
<!--            </dependency>-->
            <!-- JSR 349  Валидация-->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${validation-api.version}</version>
            </dependency>
            <!-- Рантайм БД -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>runtime</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

</project>